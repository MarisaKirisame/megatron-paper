@book{SAC,
  title={Self-adjusting computation},
  author={Acar, Umut A},
  year={2005},
  publisher={Carnegie Mellon University}
}

@inproceedings{yufeng-1,
  title={Tree traversal synthesis using domain-specific symbolic compilation},
  author={Chen, Yanju and Liu, Junrui and Feng, Yu and Bodik, Rastislav},
  booktitle={Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems},
  pages={1030--1042},
  year={2022}
}

@article{yufeng-2,
  title={Conflict-Driven synthesis for layout engines},
  author={Liu, Junrui and Chen, Yanju and Atkinson, Eric and Feng, Yu and Bodik, Rastislav},
  journal={Proceedings of the ACM on Programming Languages},
  volume={7},
  number={PLDI},
  pages={638--659},
  year={2023},
  publisher={ACM New York, NY, USA}
}
@inproceedings{TR,
    author = {Reps, Thomas},
    title = {Optimal-time incremental semantic analysis for syntax-directed editors},
    year = {1982},
    isbn = {0897910656},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/582153.582172},
    doi = {10.1145/582153.582172},
    abstract = {Attribute grammars permit the specification of static semantics in an applicative and modular fashion, and thus are a good basis for syntax-directed editors. Such editors represent programs as attributed trees, which are modified by operations such as subtree pruning and grafting. After each modification, a subset of attributes, AFFECTED, requires new values. Membership in AFFECTED is not known a priori; this paper presents an algorithm that identifies attributes in AFFECTED and computes their new values. The algorithm is time-optimal, its cost is proportional to the size of AFFECTED.},
    booktitle = {Proceedings of the 9th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    pages = {169â€“176},
    numpages = {8},
    location = {Albuquerque, New Mexico},
    series = {POPL '82}
}

@book{LM,
  title={Parallel Layout Engines: Synthesis and Optimization of Tree Traversals},
  author={Meyerovich, Leo Alexander},
  year={2013},
  publisher={University of California, Berkeley}
}

@inproceedings{SOM,
  title={Two simplified algorithms for maintaining order in a list},
  author={Bender, Michael A and Cole, Richard and Demaine, Erik D and Farach-Colton, Martin and Zito, Jack},
  booktitle={European symposium on algorithms},
  pages={152--164},
  year={2002},
  organization={Springer}
}

@inproceedings{OM,
  title={Maintaining order in a linked list},
  author={Dietz, Paul F},
  booktitle={Proceedings of the fourteenth annual ACM symposium on Theory of computing},
  pages={122--127},
  year={1982}
}

@inproceedings{cassius-1,
  title={Automated reasoning for web page layout},
  author={Panchekha, Pavel and Torlak, Emina},
  booktitle={Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  pages={181--194},
  year={2016}
}

@article{cassius-2,
  title={Verifying that web pages have accessible layout},
  author={Panchekha, Pavel and Geller, Adam T and Ernst, Michael D and Tatlock, Zachary and Kamil, Shoaib},
  journal={ACM SIGPLAN Notices},
  volume={53},
  number={4},
  pages={1--14},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@article{cassius-3,
  title={Methods for Automatic Web Page Layout Testing and Analysis: A Review},
  author={Prazina, Irfan and Be{\'c}irovi{\'c}, {\v{S}}eila and Cogo, Emir and Okanovi{\'c}, Vensada},
  journal={IEEE Access},
  volume={11},
  pages={13948--13964},
  year={2023},
  publisher={IEEE}
}



@misc{tali-garseil,
	author = {Tali Garseil},
	title = {{H}ow browsers work --- taligarsiel.com},
	howpublished = {\url{https://taligarsiel.com/Projects/howbrowserswork1.htm##Dirty_bit_system}},
	year = {},
	note = {[Accessed 05-11-2024]},
}

@misc{lighthouse,
	author = {Chrome Team},
	title = {{A}void an excessive {D}{O}{M} size | {L}ighthouse | {C}hrome for {D}evelopers --- developer.chrome.com},
	howpublished = {\url{https://developer.chrome.com/docs/lighthouse/performance/dom-size}},
	year = {},
	note = {[Accessed 05-11-2024]},
}

@inproceedings{meyerovich-1,
  title={Parallelizing the web browser},
  author={Jones, Christopher Grant and Liu, Rose and Meyerovich, Leo and Asanovic, Krste and Bodik, Rastislav}
}

@inproceedings{meyerovich-2,
  title={Fast and parallel webpage layout},
  author={Meyerovich, Leo A and Bodik, Rastislav},
  booktitle={Proceedings of the 19th international conference on World wide web},
  pages={711--720},
  year={2010}
}

@book{meyerovich-3,
  title={Parallel Layout Engines: Synthesis and Optimization of Tree Traversals},
  author={Meyerovich, Leo Alexander},
  year={2013},
  publisher={University of California, Berkeley}
}

@BOOK{wbe,
  title     = "Web browser engineering",
  author    = "Panchekha, Pavel and Harrelson, Chris",
  abstract  = "Web browsers are the most common and widely-used platform there
               is, and this book is the essential description of how they work
               and how that impacts web developers and other software engineers
               whose work touches the web.",
  publisher = "Oxford University Press",
  month     =  sep,
  year      =  2024,
  address   = "London, England",
  language  = "en"
}

@article{HM,
  title={A theory of type polymorphism in programming},
  author={Milner, Robin},
  journal={Journal of computer and system sciences},
  volume={17},
  number={3},
  pages={348--375},
  year={1978},
  publisher={Elsevier}
}
